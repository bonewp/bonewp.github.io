<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[usb体制及测控技术相关]]></title>
      <url>http://bonewp.github.io.git/2016/08/25/usb%E4%BD%93%E5%88%B6%E5%8F%8A%E6%B5%8B%E6%8E%A7%E6%8A%80%E6%9C%AF%E7%9B%B8%E5%85%B3/</url>
      <content type="html"><![CDATA[<p>最近做的项目是基于USB体制下的相关算法，于是找了些资料把这个体制给了解了一下，在此做一下总结。</p>
<h3 id="USB体制来源"><a href="#USB体制来源" class="headerlink" title="USB体制来源"></a>USB体制来源</h3><p>USB(Unified S Band)全称统一S波段测控体制，最早是由美方提出并在1966年用于“阿波罗”登月计划，为解决原测控网中多种频段设备的复杂、电磁兼容性差、作用距离不够等问题缺陷，将跟踪测轨、遥控、遥测综合为一体，为测控技术发展史上的一个里程碑<sup><a href="#1">[1]</a></sup>。</p>
<blockquote>
<p>到1979年，世界无线电管理会议决定以S波段作为空间业务频段以后,更促进了USB的进一步发展。到了80年代，USB又被纳入国际空间数据系统咨询委员会(CCSDS)标准，并已为世界上多数国家共同接受，为有利于开展国际合作，世界上许多国家都按此建造统一S波段系统，使USB得到了进一步的推广和发展。世界上各航天国家如：中、美、前苏联、法、日、德、巴、印以及国际航天组织（如欧空局、阿拉伯卫星通信组织，亚州卫星通信组织）都相继建立了自己的USB和UCB(统一C波段)测控系统，使统一载波测控系统如雨后春笋般地出现在地球上。</p>
</blockquote>
<p>在找到的一篇<a href="http://public.ccsds.org/" target="_blank" rel="external">ccsds</a>介绍中提到了我国最早应用USB体制的卫星<sup><a href="#2">[2]</a></sup>：</p>
<blockquote>
<p>从九十年代开始我国的航天测控系统开始采用统一S波段测控体制（USB），在射频与调制的物理层采用了CCSDS标准，与此同时我国也在链路层以上的高层协议上研究采用CCSDS标准。1999年5月10日发射的实践五号卫星，在我国是第一个采用 USB测控体制的航天器，也是第一个采用CCSDS-AOS高级在轨系统标准的航天器。此后我国与欧空局合作的空间科学探测项目“双星计划”的两颗卫星“探测一号”和“探测二号”卫星的数传数据不但完全采用CCSDS-AOS高级在轨系统标准，而且向CCSDS组织正式申请了飞行器识别符。</p>
</blockquote>
<h3 id="USB基本原理"><a href="#USB基本原理" class="headerlink" title="USB基本原理"></a>USB基本原理</h3><p>测控通信系统是卫星系统的五大系统之一、载人航天系统的七大系统之一，完成对飞船的测轨、遥控、遥测、话音通信和电视传输等重要作用<sup><a href="#3">[3]</a></sup>。</p>
<p>对于遥测、遥控、测速等概念可参考文献<a href="#4">[4]</a>。</p>
<blockquote>
<p>国际上对于航天测控定义为：“Tracking, Telemetry&amp;Command”(缩写TT&amp;C)，中文通常称“跟踪，遥测及遥控”。  </p>
</blockquote>
<a id="more"></a>
<p>相对于以前不同功能采用不同载波的方式，USB体制如其名字所体现的是“统一载波”：将遥测、遥控、跟踪信号先用bpsk调制在多个副载波上，再用PM调制在一个载波上，进而搬移至S波段发射。在接收上与调相对应的锁相技术是其重要技术之一。  </p>
<p>文献<a href="#3">[3]</a>中总结了载人航天USB测控系统的综合化、高可靠性、高测轨京都、抗组合干扰、数字化、大动态控制、目标快速捕获等关键技术。其中对综合化中的“五合一”信号设计，我觉得可以帮助理解USB体制的特点：</p>
<blockquote>
<p>“五合一”信号设计<br>(1) 频分制的下行双载波: 一个用于测控(TT&amp;C)，另一个用于数传(DDT)。TT&amp;C 和 DDT 可同时存在。<br>(2) 频分制的 TT&amp;C 副载波： 下行为遥测和测距音组三种副载波，上行为遥控、话音和测距音组等四种副载波， TT&amp;C 载波采用调相/调相(PM/PM)调制。<br>(3) 时分制的 DDT 载波: 完全用作数据传输，采用 PCM/QPSK 调制。以2兆比特/秒码速传输下行话音、电视、遥测、GPS、交会雷达和科学实验数据等多路信息。<br>(4) FM 遥测载波： 航天器可用另一个载波发射高码速的遥测信号，调制方式为 PCM-FM 。 TT&amp;C 和 FM 可同时存在，为频分工作。</p>
</blockquote>
<h3 id="相关发展及感想"><a href="#相关发展及感想" class="headerlink" title="相关发展及感想"></a>相关发展及感想</h3><p>虽然吹了USB体制这么多，目前也确实是相对成熟的一套体制，，不过其一些缺点不足我觉得也是有的，如设备重复度高，这是频分复用的特点造成的；保密的问题；多目标测控时副载波之间的干扰等。  </p>
<p>为了往未来天基测控进而深空测控的方向发展，其使用的各种技术都还会提升，如使用扩频测控，频带往更高的频段发展等等。当然这些都是后话了，作为一个小硕我还是老老实实地去想算法写代码吧 ( &gt;﹏&lt;。)～</p>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ol>
<li><span id="1"> </span> 刘嘉兴. <a href="http://www.cnki.net/KCMS/detail/detail.aspx?QueryID=9&amp;CurRec=1&amp;recid=&amp;filename=DATE902.000&amp;dbname=CJFD9899&amp;dbcode=CJFQ&amp;pr=&amp;urlid=&amp;yx=&amp;uid=WEEvREcwSlJHSldTTGJhYlRaSXVoREFFTWF3MEF2VFBwN1NmS3NlQ3RtWU8=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;v=MDc0NDFTemZhN3E0SE0vTXI0OHFGNTRPZmdnNXpoQVU0amg0T1g2VHJIMDNlYk9TUmJLZFl1UnVGU2puVVE9PUk=" target="_blank" rel="external">航天测控技术的过去、现在和未来</a>、现在和未来[J]. 电讯技术,1999,02:3+5-10.</li>
<li><p><span id="2"> </span> <a href="www.nssc.cas.cn/xwzx/kydt/201307/W020130717344100734922.pdf">CSDS 概述 - 国家空间科学中心 - 中国科学院</a></p>
</li>
<li><p><span id="3"> </span> 刘嘉兴. <a href="http://www.cnki.net/KCMS/detail/detail.aspx?QueryID=0&amp;CurRec=1&amp;recid=&amp;filename=YHXB200506013&amp;dbname=CJFD2005&amp;dbcode=CJFQ&amp;pr=&amp;urlid=&amp;yx=&amp;v=MzEzMjJYVGJMRzRIdFRNcVk5RVo0UjhlWDFMdXhZUzdEaDFUM3FUcldNMUZyQ1VSTHlmYitScUZDdmdVYnZQUEM=" target="_blank" rel="external">载人航天USB测控系统及其关键技术</a>[J]. 宇航学报,2005,06:743-747.</p>
</li>
<li><p><span id="3"> </span> 饶启龙. <a href="http://www.cnki.net/KCMS/detail/detail.aspx?QueryID=12&amp;CurRec=1&amp;recid=&amp;filename=OXXT201103017&amp;dbname=CJFD2011&amp;dbcode=CJFQ&amp;pr=&amp;urlid=&amp;yx=&amp;uid=WEEvREcwSlJHSldTTGJhYlRaSXVoREFFTWF3MEF2VFBwN1NmS3NlQ3RtWU8=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;v=MjYyOTk4ZVgxTHV4WVM3RGgxVDNxVHJXTTFGckNVUkx5ZmIrUnFGQ25oVjdyQktqWFRlckc0SDlETXJJOUVZNFI=" target="_blank" rel="external">航天测控技术及其发展方向</a>[J]. 信息通信技术,2011,03:77-83.</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[给marika感动得不要不要的]]></title>
      <url>http://bonewp.github.io.git/2016/08/20/%E7%BB%99marika%E6%84%9F%E5%8A%A8%E5%BE%97%E4%B8%8D%E8%A6%81%E4%B8%8D%E8%A6%81%E7%9A%84/</url>
      <content type="html"><![CDATA[<p>之前伪恋看了一集就弃掉了，最近重新拾起来觉得这n角恋还挺好玩的，补了动画补漫画，结果进了marika线简直停不下来啊！我觉得marika简直是这里面塑造的最成功的角色了，人妻属性点满、逗逼属性点满，努力有觉悟。啊！~~~老夫的少女心…⁄(⁄ ⁄•⁄ω⁄•⁄ ⁄)⁄…. (੭ु≧▽≦)੭ु</p>
<a id="more"></a>
<p>刚看动画的时候还只是觉得这孩子比较逗加上满满的套路就是了，到了逼婚线把背景都给交代清楚了才知道这尼玛绝对是后宫里最努力的人了啊。到逼婚这儿的时候简直感动得不要不要的 滚来滚去……~(～o￣▽￣)～o 。。。滚来滚去……o～(＿△＿o～) ~。。  </p>
<img src="/2016/08/20/给marika感动得不要不要的/marika.png" alt="marika.png" title="">  
<p>祝marika能找到自己的幸福，嗯！(´°̥̥̥̥̥̥̥̥ω°̥̥̥̥̥̥̥̥｀)</p>
<img src="/2016/08/20/给marika感动得不要不要的/marika.jpg" alt="marika.jpg" title="">
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[const限定符相关]]></title>
      <url>http://bonewp.github.io.git/2016/08/18/const%E9%99%90%E5%AE%9A%E7%AC%A6%E7%9B%B8%E5%85%B3/</url>
      <content type="html"><![CDATA[<p>阅读const限定符一节的时候很是绕了点，发现这里很容易混淆，所以记录一下。</p>
<p>在需要定义变量的值不能被改变的时候，使用const加以限定，如<code>const int buffSize = 512;</code>这里是指变量本身是常量。</p>
<p>而在定义引用和指针的时候，注意是指<strong>引用或指针是指向常量的引用或指针</strong>，如<code>const int *p;</code>，这里指针p是<strong>指向常量的指针(pointer to const)</strong>， p指向的值必须是一个const类型，而p本身的值（即所存储的地址）则可以改变。这里一定要明确的概念就是<strong>指向常量的引用/指针不能用于改变其绑定/所指对象的值</strong>。</p>
<p>由于引用在初始化后不能再更改绑定对象，不用多说。而要让指针本身是常量的话，需要使用<code>*const</code>来定义<strong>常量指针(const pointer)</strong>。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> *<span class="keyword">const</span> p = &amp;i;  <span class="comment">//p本身的值不能再改变，始终指向i</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> *<span class="keyword">const</span> pip = &amp;pi; <span class="comment">//pip是一个指向常量的常量指针</span></div></pre></td></tr></table></figure></p>
<p>由此可见，指针本身是常量和指向的对象是常量为两个独立问题。</p>
<blockquote>
<p>用名词<strong>顶层const(top-level const)</strong>表示指针本身为 常量，而用名词<strong>底层const(low-level const)</strong>表示指针所指的对象为一个常量。  </p>
</blockquote>
<p>顶层const可用于基本类型在内的任意对像，而底层const则与指针和引用等复合类型的基本类型部分有关。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[术语：何为对象]]></title>
      <url>http://bonewp.github.io.git/2016/08/17/%E6%9C%AF%E8%AF%AD%EF%BC%9A%E4%BD%95%E4%B8%BA%E5%AF%B9%E8%B1%A1/</url>
      <content type="html"><![CDATA[<p>最近腾出点时间复习C++，准备把C++ Primer好好看一遍。  </p>
<p>在<code>P39</code>上看到一个有趣的地方，什么是<strong>术语</strong>？书上给的解释是:  </p>
<blockquote>
<p>通常情况下，对象是指一块能存储数据并具有某种类型的内存空间。</p>
</blockquote>
<p>以前接触对象这个概念，总是基于面向对象之类的东西来说，一直感觉比较抽象。而这个从偏硬件的角度的解释，让我有一种豁然开朗的感觉，特别是在现在用FPGA用得多了之后。  </p>
<p>就像对FPGA代码最终要映射到FF、LUT等单元，对软件而言高级语言最终是要对应CPU对内存上的一段数据进行操作，这样刚才<strong>对象</strong>的解释也就能明白了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[verilog中的加法]]></title>
      <url>http://bonewp.github.io.git/2016/08/11/verilog%E4%B8%AD%E7%9A%84%E5%8A%A0%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>这两天调一个项目的时候涉及到了符号数的加法和限幅，调了好久才发现这里面的坑。。瞬间觉得自己基础有待提高啊</p>
<h3 id="符号数的加法"><a href="#符号数的加法" class="headerlink" title="符号数的加法"></a>符号数的加法</h3><p>用补码来表示符号数，对两个符号数相加可以直接加法赋值，如下列代码，这是由补码的特性决定的，非常方便。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wire [<span class="number">31</span>:<span class="number">0</span>] sig_1;</div><div class="line">wire [<span class="number">31</span>:<span class="number">0</span>] sig_2;</div><div class="line">wire [<span class="number">31</span>:<span class="number">0</span>] add_ans;</div><div class="line"></div><div class="line">assign add_ans = sig_1 + sig_2;</div></pre></td></tr></table></figure></p>
<h3 id="加法溢出的处理"><a href="#加法溢出的处理" class="headerlink" title="加法溢出的处理"></a>加法溢出的处理</h3><p>然而固定位数的加法会出现溢出的问题，要为结果考虑进位，因此为结果多添加一位。此时一定要注意！</p>
<p><strong>符号数加法要进行符号位扩展！！</strong></p>
<p>当时没有注意到这个，死活不知道为什么结果的进位消失了…示例代码</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wire [<span class="number">31</span>:<span class="number">0</span>] sig_1;</div><div class="line">wire [<span class="number">31</span>:<span class="number">0</span>] sig_2;</div><div class="line">wire [<span class="number">32</span>:<span class="number">0</span>] add_ans;</div><div class="line"></div><div class="line">assign add_ans = &#123;sig_1[<span class="number">31</span>], sig_1&#125; + &#123;sig_2[<span class="number">31</span>], sig_2&#125;;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="加法溢出限幅处理"><a href="#加法溢出限幅处理" class="headerlink" title="加法溢出限幅处理"></a>加法溢出限幅处理</h3><p>如果加法结果溢出了，但是要传至的信号位数是固定的，那么就需要限幅。</p>
<p>相对来说这个也很简单，这里占个坑，以后有需要再来填。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[写markdown时用到的特殊用法]]></title>
      <url>http://bonewp.github.io.git/2016/08/09/%E5%86%99markdown%E6%97%B6%E7%94%A8%E5%88%B0%E7%9A%84%E7%89%B9%E6%AE%8A%E7%94%A8%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>我在用Markdown写东西的时候，有时候用到了一些奇奇怪怪的用法，这里记录下来以便之后查阅。</p>
<h3 id="makedown通用语法相关"><a href="#makedown通用语法相关" class="headerlink" title="makedown通用语法相关"></a>makedown通用语法相关</h3><h4 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a><span id="sup/sub">上下标</span></h4><p>将需要修改为上下标的文字用html标签包裹即可。如下：<br>上标：<code>&lt;sup&gt; sup_text &lt;/sup&gt;</code><br>下标：<code>&lt;sub&gt; sup_text &lt;/sub&gt;</code></p>
<h4 id="文章内跳转"><a href="#文章内跳转" class="headerlink" title="文章内跳转"></a>文章内跳转</h4><p>将需要跳转至的地方加上html的id属性，形如：<code>&lt;span id=&quot;where_jump_to&quot;&gt; text &lt;/span&gt;</code><br>再在需要设置跳转的地方使用Markdown的链接语法，形如：<code>[text](#where_jump_to)</code></p>
<p>这里测试一下跳转至<a href="#sup/sub">上下标</a>。</p>
<a id="more"></a>
<h3 id="框架使用相关"><a href="#框架使用相关" class="headerlink" title="框架使用相关"></a>框架使用相关</h3><h4 id="hexo相关"><a href="#hexo相关" class="headerlink" title="hexo相关"></a>hexo相关</h4><h5 id="资源文件夹"><a href="#资源文件夹" class="headerlink" title="资源文件夹"></a>资源文件夹</h5><p>我没有把图片存储到云盘上的习惯。。（好像暴露了什么），查阅到使用的hexo框架支持资源文件夹可以便捷的管理。</p>
<p>通过在站点配置文件<code>config.yml</code>中的<code>post_asset_folder</code>选项设为<code>true</code>后，可以将图片放在与文章同名的文件夹内，然后使用相对路径应用的标签插件来引用图片等资源，相较于常规的markdown语法<code>![](/image.jpg)</code>，可使图片在主页和存档页显示正常。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% asset_path slug %&#125;</div><div class="line">&#123;% asset_img slug [title] %&#125;</div><div class="line">&#123;% asset_link slug [title] %&#125;</div></pre></td></tr></table></figure>
<h5 id="设置阅读全文"><a href="#设置阅读全文" class="headerlink" title="设置阅读全文"></a>设置阅读全文</h5><p>在文章中使用<code>&lt;!-- more --&gt;</code>手动进行截断，Hexo 提供的方式。</p>
<h4 id="Next相关"><a href="#Next相关" class="headerlink" title="Next相关"></a>Next相关</h4><p>..</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[clock chip lmk03806]]></title>
      <url>http://bonewp.github.io.git/2016/07/26/clock-chip-lmk03806/</url>
      <content type="html"><![CDATA[<p>ちょっと待って</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Vivado IO Constraint]]></title>
      <url>http://bonewp.github.io.git/2016/07/13/Vivado-IO-Constrain/</url>
      <content type="html"><![CDATA[<h2 id="IO-delay"><a href="#IO-delay" class="headerlink" title="IO delay"></a>IO delay</h2><h3 id="Input-delay"><a href="#Input-delay" class="headerlink" title="Input delay"></a>Input delay</h3><hr>
<p>数据相对于上升沿往后的延迟。<br><img src="/2016/07/13/Vivado-IO-Constrain/inputDelay_1.png" alt="inputDelay_1" title="inputDelay_1"><br><img src="/2016/07/13/Vivado-IO-Constrain/inputDelay_2.png" alt="inputDelay_2" title="inputDelay_2"><br>Example code:</p>
<figure class="highlight tcl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">create_clock -name sysClk -period <span class="number">10</span> [get_ports CLK0]</div><div class="line">set_input_delay -<span class="keyword">clock</span> sysClk -max <span class="number">4</span> [get_ports DIN]</div><div class="line">set_input_delay -<span class="keyword">clock</span> sysClk -min <span class="number">1</span> [get_ports DIN]</div></pre></td></tr></table></figure>
<p>若不考虑板级延迟，那就可根据前级芯片的建立/保持时间来推算此MAX/MIN的值。</p>
<a id="more"></a>
<h3 id="Output-delay"><a href="#Output-delay" class="headerlink" title="Output delay"></a>Output delay</h3><hr>
<p>数据相对于上升沿往前的延迟。即原点在目标时钟的上升沿，正半轴朝往前面的时间。<br><img src="/2016/07/13/Vivado-IO-Constrain/outputDelay_1.png" alt="outputDelay_1" title="outputDelay_1"><br>如果设定trce_dly都等于0的话（即板级延迟忽略），那么：</p>
<blockquote>
<p>The set_output_delay -max should be the setup requirement of the external device; The set_output_delay -min should be the negative of the hold requirement.</p>
</blockquote>
<p>Example code:</p>
<figure class="highlight tcl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">set_output_delay -<span class="keyword">clock</span> &lt;<span class="keyword">clock</span>&gt; <span class="number">0.6</span> [get_ports NWAIT]</div><div class="line">set_output_delay -<span class="keyword">clock</span> &lt;<span class="keyword">clock</span>&gt; <span class="number">-3.2</span> -min [get_ports NWAIT]</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://bonewp.github.io.git/2016/07/13/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
